// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/news": {
            "get": {
                "description": "Парсит новости с указанных сайтов (например, TASS) и возвращает заголовки, ссылки и текст статей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Получить новости с сайтов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название сайта (например: tass)",
                        "name": "site",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество новостей (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetNewsFromSitesResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или ошибка парсера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет одну или несколько новостей с черновиком, источниками и сущностями",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Add news",
                "parameters": [
                    {
                        "description": "Список новостей",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное добавление",
                        "schema": {
                            "$ref": "#/definitions/service.AddNewsResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный JSON",
                        "schema": {
                            "$ref": "#/definitions/service.AddNewsResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/service.AddNewsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.News": {
            "type": "object",
            "properties": {
                "dedup_group": {
                    "type": "string"
                },
                "draft": {
                    "$ref": "#/definitions/models.draft"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "headline": {
                    "type": "string"
                },
                "hotness": {
                    "type": "number"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeline": {
                    "type": "string"
                },
                "why_now": {
                    "type": "string"
                }
            }
        },
        "models.NewsRequest": {
            "type": "object",
            "properties": {
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.News"
                    }
                }
            }
        },
        "models.draft": {
            "type": "object",
            "properties": {
                "bullets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lead": {
                    "type": "string"
                },
                "quotes": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "service.AddNewsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "service.GetNewsFromSitesResponse": {
            "type": "object",
            "properties": {
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.News"
                    }
                }
            }
        },
        "service.News": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
